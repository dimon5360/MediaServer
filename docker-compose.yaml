version: '3.9'

services:

  postgres:
      image: postgres:14
      container_name: postgres
      volumes:
        - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql
      env_file:
        - './env/db.env'
      ports:
        - 5243:5432

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   container_name: zookeeper
  #   ports:
  #     - 2181:2181
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #
  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   container_name: kafka
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 29092:29092
  #   environment:
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # init-kafka:
  #   image: confluentinc/cp-kafka:latest
  #   container_name: init-kafka
  #   depends_on:
  #     - kafka
  #   command: >
  #     bash -c
  #       "
  #       kafka-topics --create --if-not-exists --bootstrap-server=kafka:9092 --partitions 1 --replication-factor 1 --topic BarMapRoutingTopic
  #       kafka-topics --create --if-not-exists --bootstrap-server=kafka:9092 --partitions 1 --replication-factor 1 --topic BarmapDBTopic
  #       kafka-topics --list --bootstrap-server=kafka:9092
  #       "

  # mongodb:
  #   image: mongo:5.0
  #   container_name: mongo
  #   ports:
  #     - 27017:27017
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=citizix
  #     - MONGO_INITDB_ROOT_PASSWORD=S3cret
  #     - MONGO_INITDB_DATABASE=testdb
  #   volumes:
  #     - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro